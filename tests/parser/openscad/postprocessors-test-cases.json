{
    "number": [
        {
            "title": "should produce the descriptor for a number value, from a number token (10)",
            "method": "number",
            "input": [
                {
                    "type": "number",
                    "value": "10",
                    "text": "10",
                    "offset": 0,
                    "lineBreaks": 0,
                    "line": 1,
                    "col": 1
                }
            ],
            "output": {
                "type": "number",
                "value": 10
            }
        },
        {
            "title": "should produce the descriptor for a number value, from a number token (.2)",
            "method": "number",
            "input": [
                {
                    "type": "number",
                    "value": ".2",
                    "text": ".2",
                    "offset": 0,
                    "lineBreaks": 0,
                    "line": 1,
                    "col": 1
                }
            ],
            "output": {
                "type": "number",
                "value": 0.2
            }
        },
        {
            "title": "should produce the descriptor for a number value, from a number token (3.14)",
            "method": "number",
            "input": [
                {
                    "type": "number",
                    "value": "3.14",
                    "text": "3.14",
                    "offset": 0,
                    "lineBreaks": 0,
                    "line": 1,
                    "col": 1
                }
            ],
            "output": {
                "type": "number",
                "value": 3.14
            }
        },
        {
            "title": "should produce the descriptor for a number value, from a number token (-5)",
            "method": "number",
            "input": [
                {
                    "type": "number",
                    "value": "-5",
                    "text": "-5",
                    "offset": 0,
                    "lineBreaks": 0,
                    "line": 1,
                    "col": 1
                }
            ],
            "output": {
                "type": "number",
                "value": -5
            }
        },
        {
            "title": "should produce the descriptor for a number value, from a number token (31.4e-10)",
            "method": "number",
            "input": [
                {
                    "type": "number",
                    "value": "31.4e-10",
                    "text": "31.4e-10",
                    "offset": 0,
                    "lineBreaks": 0,
                    "line": 1,
                    "col": 1
                }
            ],
            "output": {
                "type": "number",
                "value": 31.4e-10
            }
        }
    ],
    "string": [
        {
            "title": "should produce the descriptor for a string value, from a string token (\"a long string\")",
            "method": "string",
            "input": [
                {
                    "type": "string",
                    "value": "\"a long string\"",
                    "text": "\"a long string\"",
                    "offset": 0,
                    "lineBreaks": 0,
                    "line": 1,
                    "col": 1
                }
            ],
            "output": {
                "type": "string",
                "value": "a long string"
            }
        },
        {
            "title": "should produce the descriptor for a string value, from a string token (\"a \\\"long\\\" string\")",
            "method": "string",
            "input": [
                {
                    "type": "string",
                    "value": "\"a \"long\" string\"",
                    "text": "\"a \"long\" string\"",
                    "offset": 0,
                    "lineBreaks": 0,
                    "line": 1,
                    "col": 1
                }
            ],
            "output": {
                "type": "string",
                "value": "a \"long\" string"
            }
        }
    ],
    "path": [
        {
            "title": "should produce the descriptor for a path value, from a path token (<./path/to/a/library.scad>)",
            "method": "path",
            "input": [
                {
                    "type": "path",
                    "value": "<./path/to/a/library.scad>",
                    "text": "<./path/to/a/library.scad>",
                    "offset": 0,
                    "lineBreaks": 0,
                    "line": 1,
                    "col": 1
                }
            ],
            "output": {
                "type": "path",
                "value": "./path/to/a/library.scad"
            }
        }
    ],
    "boolean": [
        {
            "title": "should produce the descriptor for a boolean value, from a boolean token (true)",
            "method": "bool",
            "input": [
                {
                    "type": "true",
                    "value": "true",
                    "text": "true",
                    "offset": 0,
                    "lineBreaks": 0,
                    "line": 1,
                    "col": 1
                }
            ],
            "output": {
                "type": "boolean",
                "value": true
            }
        },
        {
            "title": "should produce the descriptor for a boolean value, from a boolean token (false)",
            "method": "bool",
            "input": [
                {
                    "type": "false",
                    "value": "false",
                    "text": "false",
                    "offset": 0,
                    "lineBreaks": 0,
                    "line": 1,
                    "col": 1
                }
            ],
            "output": {
                "type": "boolean",
                "value": false
            }
        }
    ],
    "undefined": [
        {
            "title": "should produce the descriptor for an undefined value, from an undef token (undef)",
            "method": "undef",
            "input": [
                {
                    "type": "undef",
                    "value": "undef",
                    "text": "undef",
                    "offset": 0,
                    "lineBreaks": 0,
                    "line": 1,
                    "col": 1
                }
            ],
            "output": {
                "type": "undefined",
                "value": null
            }
        }
    ],
    "identifier": [
        {
            "title": "should produce the descriptor for an identifier, from an identifier token (vector)",
            "method": "identifier",
            "input": [
                {
                    "type": "identifier",
                    "value": "vector",
                    "text": "vector",
                    "offset": 0,
                    "lineBreaks": 0,
                    "line": 1,
                    "col": 1
                }
            ],
            "output": {
                "type": "identifier",
                "value": "vector"
            }
        },
        {
            "title": "should produce the descriptor for an identifier, from an identifier token (vector3D)",
            "method": "identifier",
            "input": [
                {
                    "type": "identifier",
                    "value": "vector3D",
                    "text": "vector3D",
                    "offset": 0,
                    "lineBreaks": 0,
                    "line": 1,
                    "col": 1
                }
            ],
            "output": {
                "type": "identifier",
                "value": "vector3D"
            }
        },
        {
            "title": "should produce the descriptor for an identifier, from an identifier token (fooBar)",
            "method": "identifier",
            "input": [
                {
                    "type": "identifier",
                    "value": "fooBar",
                    "text": "fooBar",
                    "offset": 0,
                    "lineBreaks": 0,
                    "line": 1,
                    "col": 1
                }
            ],
            "output": {
                "type": "identifier",
                "value": "fooBar"
            }
        },
        {
            "title": "should produce the descriptor for an identifier, from an identifier token (intersection_for)",
            "method": "identifier",
            "input": [
                {
                    "type": "identifier",
                    "value": "intersection_for",
                    "text": "intersection_for",
                    "offset": 0,
                    "lineBreaks": 0,
                    "line": 1,
                    "col": 1
                }
            ],
            "output": {
                "type": "identifier",
                "value": "intersection_for"
            }
        }
    ],
    "comment": [
        {
            "title": "should produce the descriptor for a line comment, from a lcomment token (// a comment)",
            "method": "lcomment",
            "input": [
                {
                    "type": "lcomment",
                    "value": "// a comment",
                    "text": "// a comment",
                    "offset": 0,
                    "lineBreaks": 0,
                    "line": 1,
                    "col": 1
                }
            ],
            "output": {
                "type": "comment",
                "value": " a comment"
            }
        },
        {
            "title": "should produce the descriptor for a line comment, from a lcomment token (// a comment)",
            "method": "lcomment",
            "input": [
                {
                    "type": "lcomment",
                    "value": "///// a comment",
                    "text": "///// a comment",
                    "offset": 0,
                    "lineBreaks": 0,
                    "line": 1,
                    "col": 1
                }
            ],
            "output": {
                "type": "comment",
                "value": "/// a comment"
            }
        },
        {
            "title": "should produce the descriptor for a line comment, from a lcomment token (// a comment  )",
            "method": "lcomment",
            "input": [
                {
                    "type": "lcomment",
                    "value": "// a comment  ",
                    "text": "// a comment  ",
                    "offset": 0,
                    "lineBreaks": 0,
                    "line": 1,
                    "col": 1
                }
            ],
            "output": {
                "type": "comment",
                "value": " a comment  "
            }
        },
        {
            "title": "should produce the descriptor for a multi-lines comment, from a mcomment token (/* a comment */)",
            "method": "mcomment",
            "input": [
                {
                    "type": "mcomment",
                    "value": "/* a comment */",
                    "text": "/* a comment */",
                    "offset": 0,
                    "lineBreaks": 0,
                    "line": 1,
                    "col": 1
                }
            ],
            "output": {
                "type": "comment",
                "value": [
                    " a comment "
                ]
            }
        },
        {
            "title": "should produce the descriptor for a multi-lines comment, from a mcomment token (/**  \\r\\n *\\r\\n * a comment  \\r\\n *\\r\\n */)",
            "method": "mcomment",
            "input": [
                {
                    "type": "mcomment",
                    "value": "/**  \r\n *\r\n * a comment  \r\n *  \r\n */",
                    "text": "/**  \r\n *\r\n * a comment  \r\n *  \r\n */",
                    "offset": 0,
                    "lineBreaks": 0,
                    "line": 1,
                    "col": 1
                }
            ],
            "output": {
                "type": "comment",
                "value": [
                    "  ",
                    "",
                    " a comment  ",
                    "  ",
                    ""
                ]
            }
        },
        {
            "title": "should produce the descriptor for a multi-lines comment, from a mcomment token (/* a\\r\\n\\r\\nmulti\\r\\n\\r\\nline\\r\\n\\r\\ncomment */)",
            "method": "mcomment",
            "input": [
                {
                    "type": "mcomment",
                    "value": "/* a\r\n\r\nmulti\r\n\r\nline\r\n\r\ncomment */",
                    "text": "/* a\r\n\r\nmulti\r\n\r\nline\r\n\r\ncomment */",
                    "offset": 0,
                    "lineBreaks": 0,
                    "line": 1,
                    "col": 1
                }
            ],
            "output": {
                "type": "comment",
                "value": [
                    " a",
                    "",
                    "multi",
                    "",
                    "line",
                    "",
                    "comment "
                ]
            }
        }
    ],
    "forward": [
        {
            "title": "should unpack the token from the wrapping array",
            "method": "forward",
            "input": [
                {
                    "type": "identifier",
                    "value": "fooBar",
                    "text": "fooBar",
                    "offset": 0,
                    "lineBreaks": 0,
                    "line": 1,
                    "col": 1
                }
            ],
            "output": {
                "type": "identifier",
                "value": "fooBar",
                "text": "fooBar",
                "offset": 0,
                "lineBreaks": 0,
                "line": 1,
                "col": 1
            }
        }, {
            "title": "should forward the token",
            "method": "forward",
            "input": {
                "type": "identifier",
                "value": "vector"
            },
            "output": {
                "type": "identifier",
                "value": "vector"
            }
        }
    ],
    "discard": [
        {
            "title": "should produce a null value whatever the source is (identifier)",
            "method": "discard",
            "input": [
                {
                    "type": "identifier",
                    "value": "fooBar",
                    "text": "fooBar",
                    "offset": 0,
                    "lineBreaks": 0,
                    "line": 1,
                    "col": 1
                }
            ],
            "output": null
        },
        {
            "title": "should produce a null value whatever the source is (number)",
            "method": "discard",
            "input": [
                {
                    "type": "number",
                    "value": "15",
                    "text": "15",
                    "offset": 0,
                    "lineBreaks": 0,
                    "line": 1,
                    "col": 1
                }
            ],
            "output": null
        }
    ]
}
